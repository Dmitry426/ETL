services:
  etl:
    build:
      context: .
      target: development
    env_file:
      - ./.env
    command: [ "python", "-m", "etl"]
    volumes:
      - ./postgres_to_es/etl:/src/etl
      - ./postgres_to_es/etl/config.json:/src/config.json
      -  postgres_to_es_logs:/src/logs
    depends_on:
      film_api_elastic:
        condition: service_healthy
      postgres:
        condition: service_healthy

  postgres:
    image: postgres:13.0-alpine
    volumes:
      - movie_data:/var/lib/postgresql/data/
    healthcheck:
      test: pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DBNAME}
      interval: 5s
      timeout: 20s
      retries: 100
    environment:
      - POSTGRES_USER=${POSTGRES_NAME}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_NAME}
    ports:
      - 5432:5432
    restart: always

  film_api_elastic:
    image: elasticsearch:7.7.0
    environment:
      cluster.name: movies-elasticsearch-cluster
      network.host: 0.0.0.0
      bootstrap.memory_lock : "true"
      discovery.type: single-node
    healthcheck:
      test: curl -s http://film_api_elastic:9200/_cat/health >/dev/null || exit 1
      interval: 5s
      timeout: 20s
      retries: 100
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - movie_es_data:/usr/share/elasticsearch/data
    ports:
      - 9200:9200

volumes:
  movie_data:
    driver: local
  movie_es_data:
    driver: local
  postgres_to_es_logs:
